<#@ template hostSpecific="true" linePragmas="false" #>
<#@  parameter type="Microsoft.VisualStudio.Web.CodeGeneration.EntityFrameworkCore.NewDbContextTemplateModel" name="Model" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Text" #>
<#
    var namespaceName = string.IsNullOrEmpty(Model.DbContextNamespace) ? Model.ProjectName : Model.DbContextNamespace;
    var usings = new List<string>
    {
        "Microsoft.AspNetCore.Mvc.RazorPages",
        "Microsoft.EntityFrameworkCore"
    };

    string baseClassName;
    if (string.Equals(Model.DbContextTypeName, "DbContext", StringComparison.Ordinal))
    {
        baseClassName = "Microsoft.EntityFrameworkCore.DbContext";
    }
    else
    {
        baseClassName = "DbContext";
    }
#>
namespace <#= namespaceName #>;
public class <#= Model.DbContextTypeName #> : <#= baseClassName #>
{
    public <#= Model.DbContextTypeName #> (DbContextOptions<<#= Model.DbContextTypeName #>> options)
        : base(options)
    {
    }

    public DbSet<<#= Model.ModelTypeFullName #>> <#= Model.ModelTypeName #> { get; set; } = default!;
}

<#
    StringBuilder mainEnvironment = GenerationEnvironment;
    GenerationEnvironment = new StringBuilder();

    foreach (var ns in usings)
    {
#>
using <#= ns #>;
<#
    }

    WriteLine("");

    GenerationEnvironment.Append(mainEnvironment);
#>
